/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4
/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */


&mt {
  flavor = "tap-preferred";
  tapping_term_ms = <200>;
  quick_tap_ms = <75>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp KP_MINUS  &kp SLASH   &kp DOT        &kp P           &kp Y         &kp F             &kp G        &kp C        &kp R           &kp L
            &mt LSHIFT A  &mt LCTRL O &mt LALT E     &kp U           &mt LGUI I    &mt RGUI D        &kp H        &mt RALT T   &mt RCTRL N     &mt RSHIFT S
            &kp ESC       &kp Q       &kp J          &kp K           &kp X         &kp B             &kp M        &kp W        &kp V           &kp Z
                                                     &lt FUN TAB     &lt SYM SPACE &lt NAV ENTER     &lt NUM BSPC
            >;
        };
        navigation_layer {
            bindings = <
            &trans     &trans          &trans        &trans          &trans        &trans            &trans       &trans       &trans          &kp RIGHT
            &kp LSHIFT &kp LCTRL       &kp LALT      &trans          &kp LGUI      &kp LT            &kp LEFT     &kp LPAR     &kp LBRC        &kp LBKT
            &trans     &trans          &kp DOWN      &kp UP          &trans        &kp GT            &trans       &kp RPAR     &kp RBRC        &kp RBKT
                                                     &kp TAB         &kp SPACE     &kp ENTER         &trans
            >;
        };
        numerical_layer {
            bindings = <
            &trans     &trans         &trans         &trans          &trans        &trans            &kp KP_N7    &kp KP_N8    &kp KP_N9       &trans
            &kp LSHIFT &kp LCTRL      &kp LALT       &trans          &kp LGUI      &kp KP_EQUAL      &kp KP_N4    &kp KP_N5    &kp KP_N6       &kp KP_PLUS
            &trans     &trans         &trans         &trans          &trans        &kp KP_N0         &kp KP_N1    &kp KP_N2    &kp KP_N3       &trans
                                                     &kp TAB         &kp SPACE     &trans            &kp BSPC
            >;
        };
        symbols_layer {
            bindings = <
            &kp BSLH  &kp AMPS        &kp STAR       &kp TILDE       &kp GRAVE     &trans            &trans       &trans       &trans          &trans
            &kp PIPE  &kp DLLR        &kp PRCNT      &kp CARET       &kp SQT       &kp RGUI          &kp SEMI     &kp RALT     &kp RCTRL       &kp RSHIFT
            &kp QMARK &kp EXCL        &kp AT         &kp HASH        &kp DQT       &trans            &trans       &trans       &trans          &trans
                                                     &trans          &kp SPACE     &kp ENTER         &kp BSPC
            >;
        };
        functional_layer {
            bindings = <
            &kp F10        &kp F7       &kp F8       &kp F9          &trans        &bt BT_CLR        &trans       &trans       &trans          &trans
            &mt LSHIFT F11 &mt LCTRL F4 &mt LALT F5  &kp F6          &kp LGUI      &kp RGUI          &bt BT_SEL 4 &kp RALT     &kp RCTRL       &kp RSHIFT
            &kp F12        &kp F1       &kp F2       &kp F3          &trans        &bt BT_SEL 0      &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &trans
                                                     &kp TAB         &trans        &kp ENTER         &kp BSPC
            >;
        };
    };
};
